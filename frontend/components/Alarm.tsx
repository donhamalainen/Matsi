import { StyleSheet, useWindowDimensions, View } from "react-native";
import React, { useEffect } from "react";
import Animated, {
  Easing,
  useAnimatedStyle,
  useSharedValue,
  withTiming,
} from "react-native-reanimated";
import Svg, { G, Path, Rect } from "react-native-svg";
import { SCREEN_PADDING } from "@/constants/spacing";
import { COLORS } from "@/constants/colors";
import { Text } from "./Text";

type AlarmProps = {
  type?: "success" | "error" | "warning";
  title: string;
  message?: string;
  onClose: () => void;
  duration?: number;
};
export const Alarm = ({
  type = "success",
  title,
  message,
  onClose,
  duration,
}: AlarmProps) => {
  const startPosition = useSharedValue(-100);
  const { height: SCREEN_HEIGHT } = useWindowDimensions();

  useEffect(() => {
    startPosition.value = withTiming(0, {
      duration: 500,
      easing: Easing.out(Easing.ease),
    });
    const timer = setTimeout(() => {
      startPosition.value = withTiming(-SCREEN_HEIGHT / 3, { duration: 500 });
      setTimeout(() => onClose(), 500);
    }, duration);

    return () => clearTimeout(timer);
  }, [startPosition, duration, onClose]);

  const animatedStyle = useAnimatedStyle(() => ({
    transform: [{ translateY: startPosition.value }],
  }));

  const backgroundColor =
    type === "success" ? "#4CAF50" : type === "error" ? "#F44336" : "#FFC107";

  return (
    <Animated.View
      style={[styles.container, { backgroundColor }, animatedStyle]}
    >
      <Icon type={type} />
      <View style={styles.content}>
        <Text
          variant="title"
          style={[
            styles.title,
            {
              color:
                type === "success"
                  ? "#4CAF50"
                  : type === "error"
                  ? COLORS.white
                  : COLORS.black,
            },
          ]}
        >
          {title}
        </Text>
        {message && (
          <Text
            variant="body"
            style={[
              styles.message,
              {
                color:
                  type === "success"
                    ? "#4CAF50"
                    : type === "error"
                    ? COLORS.white
                    : COLORS.black,
              },
            ]}
          >
            {message}
          </Text>
        )}
      </View>
    </Animated.View>
  );
};

type IconProps = {
  type: "success" | "error" | "warning";
};

const Icon = ({ type }: IconProps) => {
  switch (type) {
    case "success":
      return (
        <Svg width={24} height={24} viewBox="0 0 28.6939 28.3521">
          <G>
            <Path
              d="M16.3196 1.12427L18.3508 3.13599C18.5559 3.3313 18.7512 3.40943 19.0149 3.40943L21.8665 3.40943C23.9856 3.40943 24.9329 4.36646 24.9329 6.46607L24.9329 9.31763C24.9329 9.59107 25.0012 9.78638 25.1965 9.98169L27.2083 12.0129C28.7024 13.4973 28.7122 14.8352 27.2083 16.3293L25.1965 18.3508C25.0012 18.5559 24.9329 18.7512 24.9329 19.0247L24.9329 21.8665C24.9329 23.9856 23.9758 24.9329 21.8665 24.9329L19.0149 24.9329C18.7512 24.9329 18.5559 25.0012 18.3508 25.2063L16.3196 27.2083C14.8352 28.7024 13.4973 28.7122 12.0129 27.2083L9.98169 25.2063C9.78638 25.0012 9.59107 24.9329 9.31763 24.9329L6.46607 24.9329C4.35669 24.9329 3.40943 23.9758 3.40943 21.8665L3.40943 19.0247C3.40943 18.7512 3.3313 18.5559 3.13599 18.3508L1.12427 16.3293C-0.36987 14.8352-0.379636 13.4973 1.12427 12.0129L3.13599 9.98169C3.3313 9.78638 3.40943 9.59107 3.40943 9.31763L3.40943 6.46607C3.40943 4.34693 4.35669 3.40943 6.46607 3.40943L9.31763 3.40943C9.59107 3.40943 9.78638 3.3313 9.98169 3.13599L12.0032 1.12427C13.4973-0.36987 14.8352-0.379636 16.3196 1.12427ZM18.3801 9.14185L12.7356 18.1165L9.9231 14.6106C9.66919 14.259 9.42505 14.1516 9.11255 14.1516C8.62427 14.1516 8.25318 14.552 8.25318 15.0403C8.25318 15.2844 8.35083 15.5286 8.50708 15.7434L11.8372 19.7668C12.1204 20.1379 12.4133 20.2844 12.7844 20.2844C13.1458 20.2844 13.4485 20.1086 13.6731 19.7668L19.7961 10.177C19.9231 9.96216 20.0598 9.70825 20.0598 9.47388C20.0598 8.97583 19.6204 8.65357 19.1516 8.65357C18.8586 8.65357 18.5852 8.81958 18.3801 9.14185Z"
              fill={COLORS.white}
            />
          </G>
        </Svg>
      );

    case "error":
      return (
        <Svg width={24} height={24} viewBox="0 0 28.6939 28.3521">
          <G>
            <Path
              d="M16.3196 1.12427L18.3508 3.13599C18.5559 3.3313 18.7512 3.40943 19.0149 3.40943L21.8665 3.40943C23.9856 3.40943 24.9329 4.36646 24.9329 6.46607L24.9329 9.31763C24.9329 9.59107 25.0012 9.78638 25.1965 9.98169L27.2083 12.0129C28.7024 13.4973 28.7122 14.8352 27.2083 16.3293L25.1965 18.3508C25.0012 18.5559 24.9329 18.7512 24.9329 19.0247L24.9329 21.8665C24.9329 23.9856 23.9758 24.9329 21.8665 24.9329L19.0149 24.9329C18.7512 24.9329 18.5559 25.0012 18.3508 25.2063L16.3196 27.2083C14.8352 28.7024 13.4973 28.7122 12.0129 27.2083L9.98169 25.2063C9.78638 25.0012 9.59107 24.9329 9.31763 24.9329L6.46607 24.9329C4.35669 24.9329 3.40943 23.9758 3.40943 21.8665L3.40943 19.0247C3.40943 18.7512 3.3313 18.5559 3.13599 18.3508L1.12427 16.3293C-0.36987 14.8352-0.379636 13.4973 1.12427 12.0129L3.13599 9.98169C3.3313 9.78638 3.40943 9.59107 3.40943 9.31763L3.40943 6.46607C3.40943 4.34693 4.35669 3.40943 6.46607 3.40943L9.31763 3.40943C9.59107 3.40943 9.78638 3.3313 9.98169 3.13599L12.0032 1.12427C13.4973-0.36987 14.8352-0.379636 16.3196 1.12427ZM17.804 9.30786L14.1809 12.9211L10.5676 9.31763C10.3821 9.15161 10.1868 9.05396 9.93286 9.05396C9.43482 9.05396 9.04419 9.44458 9.04419 9.94263C9.04419 10.177 9.13208 10.4016 9.30786 10.5774L12.9114 14.1809L9.30786 17.7844C9.13208 17.9602 9.04419 18.1751 9.04419 18.4192C9.04419 18.9172 9.43482 19.3176 9.93286 19.3176C10.1868 19.3176 10.4114 19.2297 10.5969 19.0442L14.1809 15.4407L17.7649 19.0442C17.9407 19.2297 18.1653 19.3176 18.4192 19.3176C18.927 19.3176 19.3176 18.9172 19.3176 18.4192C19.3176 18.1653 19.2395 17.9504 19.054 17.7747L15.4504 14.1809L19.0637 10.5676C19.259 10.3723 19.3274 10.1672 19.3274 9.9231C19.3274 9.42505 18.9368 9.03443 18.4387 9.03443C18.1946 9.03443 17.9993 9.12232 17.804 9.30786Z"
              fill={COLORS.white}
            />
          </G>
        </Svg>
      );
    case "warning":
      return (
        <Svg width={24} height={24} viewBox="0 0 26.6504 24.0723">
          <G>
            <Rect height="24.0723" opacity="0" width="26.6504" x="0" y="0" />
            <Path
              d="M3.26172 23.8672L23.0176 23.8672C25.0586 23.8672 26.2891 22.4414 26.2891 20.6348C26.2891 20.0488 26.123 19.4434 25.8008 18.8867L15.9277 1.62109C15.3125 0.537109 14.2285 0 13.1445 0C12.0508 0 10.9766 0.537109 10.3613 1.62109L0.488281 18.8867C0.15625 19.4531 0 20.0488 0 20.6348C0 22.4414 1.23047 23.8672 3.26172 23.8672ZM3.28125 22.1777C2.31445 22.1777 1.73828 21.4453 1.73828 20.625C1.73828 20.332 1.81641 20 1.98242 19.6875L11.8359 2.44141C12.1289 1.92383 12.6465 1.71875 13.1445 1.71875C13.6426 1.71875 14.1504 1.92383 14.4336 2.44141L24.2969 19.6973C24.4629 20.0098 24.541 20.332 24.541 20.625C24.541 21.4453 23.9551 22.1777 22.9883 22.1777Z"
              fill={COLORS.black}
            />
            <Path
              d="M13.1348 15.4395C13.6523 15.4395 13.9648 15.1367 13.9746 14.5605L14.1309 7.85156C14.1406 7.28516 13.7109 6.86523 13.125 6.86523C12.5293 6.86523 12.1191 7.27539 12.1289 7.8418L12.2754 14.5605C12.2852 15.127 12.5879 15.4395 13.1348 15.4395ZM13.1348 19.4141C13.7988 19.4141 14.375 18.8867 14.375 18.2227C14.375 17.5488 13.8086 17.0215 13.1348 17.0215C12.4609 17.0215 11.8945 17.5586 11.8945 18.2227C11.8945 18.877 12.4707 19.4141 13.1348 19.4141Z"
              fill={COLORS.black}
            />
          </G>
        </Svg>
      );
  }
};

const styles = StyleSheet.create({
  container: {
    position: "absolute",
    top: 50,
    left: SCREEN_PADDING,
    right: SCREEN_PADDING,
    flexDirection: "row",
    alignItems: "center",
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 50,
    elevation: 3,
  },
  content: {
    flex: 1,
    marginLeft: 15,
  },
  title: {
    color: COLORS.white,
    fontSize: 16,
  },
  message: {
    fontSize: 14,
    marginTop: 2,
  },
});
